// Code generated by mockery v2.0.0-alpha.2. DO NOT EDIT.

package mocks

import (
	models "github.com/IBM/appconfiguration-go-sdk/lib/models"
	mock "github.com/stretchr/testify/mock"
)

// FeatureInterface is an autogenerated mock type for the FeatureInterface type
type FeatureInterface struct {
	mock.Mock
}

// GetCurrentValue provides a mock function with given fields: entityID, entityAttributes
func (_m *FeatureInterface) GetCurrentValue(entityID string, entityAttributes map[string]interface{}) interface{} {
	ret := _m.Called(entityID, entityAttributes)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(string, map[string]interface{}) interface{}); ok {
		r0 = rf(entityID, entityAttributes)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// GetDisabledValue provides a mock function with given fields:
func (_m *FeatureInterface) GetDisabledValue() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// GetEnabledValue provides a mock function with given fields:
func (_m *FeatureInterface) GetEnabledValue() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// GetFeatureDataFormat provides a mock function with given fields:
func (_m *FeatureInterface) GetFeatureDataFormat() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetFeatureDataType provides a mock function with given fields:
func (_m *FeatureInterface) GetFeatureDataType() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetFeatureID provides a mock function with given fields:
func (_m *FeatureInterface) GetFeatureID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetFeatureName provides a mock function with given fields:
func (_m *FeatureInterface) GetFeatureName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetSegmentRules provides a mock function with given fields:
func (_m *FeatureInterface) GetSegmentRules() []models.SegmentRule {
	ret := _m.Called()

	var r0 []models.SegmentRule
	if rf, ok := ret.Get(0).(func() []models.SegmentRule); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.SegmentRule)
		}
	}

	return r0
}

// IsEnabled provides a mock function with given fields:
func (_m *FeatureInterface) IsEnabled() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
